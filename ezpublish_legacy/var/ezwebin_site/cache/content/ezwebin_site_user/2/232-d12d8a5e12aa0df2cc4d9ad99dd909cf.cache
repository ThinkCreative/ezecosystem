a:10:{s:7:"content";s:21918:"
<div class="class-blog extrainfo">
    <div class="columns-blog float-break">
        <div class="main-column-position">
            <div class="main-column float-break">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
            
                                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Nabil-Alimi">Nabil Alimi</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://ez.ryba.eu/index.php/ez_publish/blue_screen_of_death_ez_publish" title="Blue screen of death ">Blue screen of death </a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      
<p>
Does eZ Publish have its own <a href="http://en.wikipedia.org/wiki/Blue_Screen_of_Death" title="blue screen of death" target="_blank">blue screen of death</a>? Yes, it does! It is the setup wizard on a production site. And how do you make go off? Well, it's quite enough to have anything about site.ini global override messed up: transmission error, solid syntax error, etc... Over thirty eZ installations and deployments, I was calm enough to figure it out just in seconds, but it still made me sweat... And imagine a beginner... ;)
</p>

    </div>

    <div class="attribute-url">
	<span>05/28/2008 12:41 pm</span> &nbsp; <a href="http://ez.ryba.eu">ez.ryba.eu</a> &nbsp; <a href="/Mirror/Nabil-Alimi/Blue-screen-of-death">View mirror of item</a> &nbsp; <a href="http://ez.ryba.eu/index.php/ez_publish/blue_screen_of_death_ez_publish">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Nabil-Alimi">Nabil Alimi</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://ez.ryba.eu/index.php/ez_publish/random_thoughts/themes_for_ez_publish_discussion" title="Themes for eZ Publish - discussion">Themes for eZ Publish - discussion</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      
<p>
An interesting topic emerged among suggestions in the ez.no forum, regarding themes for eZ Publish. I thought it was an interesting theme, so here's the link: <a href="http://ez.no/developer/forum/suggestions/provide_new_themes" title="Provide new themes for eZ Publish discussion" target="_blank">http://ez.no/developer/forum/suggestions/provide_new_themes</a>
</p>

<p>
And here's what I think:
</p>

<p>

I have to agree that easier theme management and exchange would help to widespread eZ Publish. Personalization seems like the big thing right now and even if it's not about that, ability to implement selected themes easily might be one of the key factors when deciding on a particular CMS.<br />
 <br />
 However, we need to realize what theme engines we're talking about when trying to incorporate that idea into eZ Publish. Most themes that I know of are prepared for systems that have a very isolated and precise functionality due to the kind of system they are (CMS blogs, forums, shops, web galleries, CRMs, or CMSs with preexisting module sets, etc..), and whose content model, internal structure etc. do not change.<br />
 <br />
 Meanwhile, with eZ Publish we have a content engine that makes it possible to handle most of the above functionalities and nearly everything can be customized. With the system we don't have preset roles for a forum, for a blog etc - we have to arrange that ourselves, minding all the implementation details. There's entire list of other dimensions that have to be taken under consideration (sections, access rules, caching, custom overrides, class modifications, structure...). Many of those things are handled or reach to the presentation layer (*.tpl), many of them in a customized way, again.<br />
 <br />
 If some of the themes available for those other, isolated systems, have to be versioned along with the core (for example: theme for version 2.0, theme for version 2.1, etc..), how do we want to handle the change with eZ Publish and its complexity? Would that be possible without limiting of what's one of eZ's key features - extensibility? Wouldn't that concrete the development of the core in some ways?<br />
 <br /> If I look at ezwebin, I see an intelligent GUI, not a skin. This interface is crucial for developers to ease the learning curve and also pick up some good practices, but with around 40 eZ Publish implementations, we haven't yet had a customer who would fit into ezwebin precisely (or sometimes - at all).
</p>
<h5> Yet, another perspective.</h5>
<p>
 Much as I appreciate the marketing goals, I don't think they are that important for this level of CMS (and ezwebin versions do just fine for that matter), and nowhere near as important as the core of the system. And there's only so much time eZ people have. I believe we're all much better off getting solutions such as eZ toolbar or eZ Flow (or bug-free stability and security) rather than color variations of backgrounds...
</p>

<p>

To be continued... here:<br /><a href="http://ez.no/developer/forum/suggestions/provide_new_themes" title="Provide new themes for eZ Publish discussion" target="_blank">http://ez.no/developer/forum/suggestions/provide_new_themes</a>
</p>

    </div>

    <div class="attribute-url">
	<span>05/22/2008 03:10 am</span> &nbsp; <a href="http://ez.ryba.eu">ez.ryba.eu</a> &nbsp; <a href="/Mirror/Nabil-Alimi/Themes-for-eZ-Publish-discussion">View mirror of item</a> &nbsp; <a href="http://ez.ryba.eu/index.php/ez_publish/random_thoughts/themes_for_ez_publish_discussion">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Nabil-Alimi">Nabil Alimi</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://ez.ryba.eu/index.php/ez_publish/lab/persistent_variables_checked_out" title="Persistent variables - checked out">Persistent variables - checked out</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      
<p>
Well, I gave up my variable caching ideas, even if just for a while. I wanted to master the standard caching techniques (there had always been an excuse, some extension to write...). And I am very glad now because it starts to feel like having real control over my eZ implementations ;)
</p>

<p>
Among things that I've discovered were persistent variables, recommended by Gaetano in response to my var cache struggling, and completely unknown to me before. Even if not a complete substitute, still a very nice solution, one of those that you ask yourself how you could have lived without...
</p>

<p>
So what's so great about persistent variables without going into much detail?
</p>
<h5>Control</h5>
<p>
They don't require any additional control. Persistent variables are compiled as part of viewcache, which means that they only expire when the viewcache expires, and they naturally follow the smart viewcache clear rules as well. What more control needed than that?
</p>
<h5>Availability</h5>
<p>
They seem to be available at all times, if not cached before, calculated upon request for the full view that stores them.
</p>

<p>
This also means that expiry times of cache-blocks that depend on that data do not have to be synchronized in any way (not that it is even possible...). Gaetano mentioned the relationship between viewcache and cache-block clear being an important issue, but I haven't been able to spot any unwanted or problematic link, yet.
</p>
<h5>Cost</h5>
<p>
Persistent variables can indeed store a variety of data useful for further generating parts of the pagelayout. Even if the singular cost of viewcache generation goes slightly up, this is usually benefitial: once generated, the variables are simply there as long as needed. And in most cases all I need is some $node-related operations.
</p>

<p>
Even if some more expensive data is to be fetched, once you're through the effort of composing you persistent hash, it's there!
</p>
<h5>Some minor disadvantages.</h5>
<p>
Since the variables are physically serialized, it is impossible to pass complex objects, such as $node directly. You have to precisely choose which simple data you want (numbers, strings, arrays, hashes...). Luckily, arrays do just fine in most cases, so that's probably as much as one may need before going straight to a fetch outside of a full view.
</p>

<p>
Then, some includes seem to be able to damage a persistent var that had been generated few lines before, so you have to carefully test if the persistent var set is available in all the full views required. Haven't found an exact rule, yet.
</p>

<p>
If you're interested if a very nice use example, look <a href="/index.php/ez_publish/lab/variable_cache_layer_var_block_wouldn_t_that_be_something" title="Post on variable cache" target="_self">here</a> in the comments.
</p>

    </div>

    <div class="attribute-url">
	<span>05/21/2008 11:50 am</span> &nbsp; <a href="http://ez.ryba.eu">ez.ryba.eu</a> &nbsp; <a href="/Mirror/Nabil-Alimi/Persistent-variables-checked-out">View mirror of item</a> &nbsp; <a href="http://ez.ryba.eu/index.php/ez_publish/lab/persistent_variables_checked_out">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Nabil-Alimi">Nabil Alimi</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://ez.ryba.eu/index.php/events/upcomming_summer_2008_ez_php_developer_events" title="Upcomming Summer 2008 eZ ">Upcomming Summer 2008 eZ </a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      
<p>
A busy week expected in the fourth week of June this year:
</p>
<h5>eZ Publish Community Developer Day, June 18th, 2008</h5>
<p>
Tutorials, <b> </b>break-out sessions, talks and presentations, barcamp... some topics announced till now include: performance and testing, improving usability & accessibility in eZ publish, web 2.0, OpenID, integration between ez publish and Ajax frameworks, Open office integration, eZ Components, eZ Find, TinyERP integration, microformats...
</p>

<p>
<a href="http://ez.no/developer/news/ez_publish_community_developer_day_june_18th_2008" title="eZ Publish Community Developer Day, June 18th 2008" target="_blank">http://ez.no/developer/news/ez_publish_community_developer_day_june_18th_2008</a>
</p>
<h5>eZ Conference & Awards, June 19-20th, 2008</h5>
<p>
The annual eZ Conference & Awards is the largest Open Source CMS event in Europe. This year marks the 6th annual eZ Conference and new this year is that it will be run together with the Open Nordic Conference and the Open Nordic Mobile event. This is without doubt, the biggest event ever held in Europe with main focus on Free Software.
</p>

<p>
All together more than 1000 people are expected to join during these days. The program will include keynote sessions, panel discussions and valuable exhibiting.
</p>

<p>
<a href="http://conference.ez.no/" title="eZ Conference & Awards, June 19-20th, 2008" target="_blank">http://conference.ez.no/</a>
</p>
<h5>PHP Vikinger, June 21st, 2008</h5>
<p>
PHP Vikinger is an unconference directed towards everyone who wants to learn more about PHP and likes to discuss and meet with new people. Unlike normal conferences, the talks at conferences are determined by the attendees, and not a program committee.
</p>

<p>
<a href="http://phpvikinger.org/" title="PHP Vikinger, June 21st, 2008" target="_blank">http://phpvikinger.org/</a>
</p>
<h5>Can't wait!</h5>
<p>

This year will be my first time to join eZ Community during this series of events.<br /> 
</p>

    </div>

    <div class="attribute-url">
	<span>05/21/2008 11:36 am</span> &nbsp; <a href="http://ez.ryba.eu">ez.ryba.eu</a> &nbsp; <a href="/Mirror/Nabil-Alimi/Upcomming-Summer-2008-eZ">View mirror of item</a> &nbsp; <a href="http://ez.ryba.eu/index.php/events/upcomming_summer_2008_ez_php_developer_events">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Nabil-Alimi">Nabil Alimi</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://ez.ryba.eu/index.php/ez_publish/random_thoughts/user_readable_cache_block_identifiers" title="User-readable cache-block identifiers">User-readable cache-block identifiers</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      
<p>
Just as I'm struggling with cache optimization for one of the current projects, I discovered that it would be great if cache-block functionality had one more parameter - a user-defined and user-readable identifier. Being able to clear all the cache by calling this identifier would be a great enhancement. It would be enough if it was implemented at eZ API level, so that users were able to create their own actions (views) to handle it. This would be especially benefitial for caching of custom modules and views, outside content and content tree itself.
</p>

<p>
Life example: Imagine expensive custom views that require couple of hundreds of SQL queries per view or view/param combination, and can be accessed/managed by a) the owner (of something), b) all other users. Now, leaving these views uncached would be suicidal, and cache-blocks would be quite handy, and there would be only two cache blocks per view (since you either are the owner or not). Now, the additional expectation is that the owner will always have his view up-to-date, which means we can't really cache it for him. Wouldn't it be great to be able to create a button named "Refresh my view", which would cause one particular cache-block (or cache block group) be cleared? In that way, we could cache the owner's view as well, making it possible to let a manual clear only when needed ;)
</p>

    </div>

    <div class="attribute-url">
	<span>05/10/2008 07:18 am</span> &nbsp; <a href="http://ez.ryba.eu">ez.ryba.eu</a> &nbsp; <a href="/Mirror/Nabil-Alimi/User-readable-cache-block-identifiers">View mirror of item</a> &nbsp; <a href="http://ez.ryba.eu/index.php/ez_publish/random_thoughts/user_readable_cache_block_identifiers">View item</a>
    </div>

        

    </div>
</div>                        
                  

 

                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>

        <div class="extrainfo-column-position">
            <div class="extrainfo-column">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
                                                <div class="attribute-tag-cloud">
                        <p>
                            
                        </p>
                        </div>

                        <div class="attribute-description">
                            
                        </div>

                        <div class="attribute-tags">
                            <h1>Tags</h1>
                            <ul>
                                                        </ul>
                        </div>

                        <div class="attribute-archive">
                            <h1>Archive</h1>
                            <ul>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/6/(year)/2008" title="">June 2008</a></li>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/5/(year)/2008" title="">May 2008</a></li>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/4/(year)/2008" title="">April 2008</a></li>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/2/(year)/2008" title="">February 2008</a></li>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/1/(year)/2008" title="">January 2008</a></li>
                                                            <li><a href="/Mirror/Nabil-Alimi/(month)/12/(year)/2007" title="">December 2007</a></li>
                                                        </ul>
                        </div>

                        <!--START: CAL NAV -->
                                                                                                                                                                                                                                                                                                                                                                                                
<div class="calendar">
<div class="calendar-tl"><div class="calendar-tr"><div class="calendar-bl"><div class="calendar-br">
<div class="content">

<div class="month">
<div class="previous">
<p><a href="/Mirror/Nabil-Alimi/(month)/4/(year)/2008" title="Previous month">&#8249;&#8249;<span class="hide"> Previous month</span></a></p>
</div>
<div class="next">
<p><a href="/Mirror/Nabil-Alimi/(month)/6/(year)/2008" title="Next month"><span class="hide">Next month </span>&#8250;&#8250;</a></p>
</div>
<h2>May&nbsp;2008</h2>
</div>

<div class="table">
<table cellspacing="0" border="0" summary="Calendar">
<tr class="top">
    <th class="left">Mon</th>
    <th>Tue</th>
    <th>Wed</th>
    <th>Thu</th>
    <th>Fri</th>
    <th>Sat</th>
    <th class="right">Sun</th>
</tr>                <tr class="">
                                            <td class="left">&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            <td class="currentselected ">
            1
        </td>
                            <td class=" ">
            2
        </td>
                            <td class=" ">
            3
        </td>
                                        <td class="  right">
            4
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            5
        </td>
                            <td class=" ">
            6
        </td>
                            <td class=" ">
            7
        </td>
                            <td class=" ">
            8
        </td>
                            <td class=" ">
            9
        </td>
                            <td class=" ">
            <em><a href="/Mirror/Nabil-Alimi/(day)/10/(month)/5/(year)/2008">10</a></em>
        </td>
                                        <td class="  right">
            11
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            12
        </td>
                            <td class=" ">
            13
        </td>
                            <td class=" ">
            14
        </td>
                            <td class=" ">
            15
        </td>
                            <td class=" ">
            16
        </td>
                            <td class=" ">
            17
        </td>
                                        <td class="  right">
            18
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            19
        </td>
                            <td class=" ">
            20
        </td>
                            <td class=" ">
            <em><a href="/Mirror/Nabil-Alimi/(day)/21/(month)/5/(year)/2008">21</a></em>
        </td>
                            <td class=" ">
            <em><a href="/Mirror/Nabil-Alimi/(day)/22/(month)/5/(year)/2008">22</a></em>
        </td>
                            <td class=" ">
            23
        </td>
                            <td class=" ">
            24
        </td>
                                        <td class="  right">
            25
        </td>
                </tr>
                        <tr class="bottom">
                    <td class="  left">
            26
        </td>
                            <td class=" ">
            27
        </td>
                            <td class=" ">
            <em><a href="/Mirror/Nabil-Alimi/(day)/28/(month)/5/(year)/2008">28</a></em>
        </td>
                            <td class=" ">
            29
        </td>
                            <td class=" ">
            30
        </td>
                            <td class=" ">
            31
        </td>
                                <td class="right">&nbsp;</td>
                                    </tr>
        </table>
</div>

</div>
</div></div></div></div>
</div>

<!-- END: CAL NAV -->                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>
    </div>
</div>";s:15:"view_parameters";a:5:{s:6:"offset";b:0;s:4:"year";s:4:"2008";s:5:"month";s:1:"5";s:3:"day";b:0;s:10:"namefilter";b:0;}s:4:"path";a:3:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:11:"Nabil Alimi";s:3:"url";b:0;s:9:"url_alias";b:0;s:7:"node_id";s:3:"232";}}s:10:"title_path";a:3:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:3:{s:4:"text";s:11:"Nabil Alimi";s:3:"url";b:0;s:9:"url_alias";b:0;}}s:10:"section_id";s:1:"1";s:7:"node_id";s:3:"232";s:15:"navigation_part";s:23:"ezcontentnavigationpart";s:12:"content_info";a:24:{s:9:"object_id";s:3:"230";s:7:"node_id";s:3:"232";s:14:"parent_node_id";s:3:"216";s:8:"class_id";s:2:"19";s:16:"class_identifier";s:4:"blog";s:9:"remote_id";s:32:"eb3ec397bd26e4854a462950ecee1c9d";s:14:"node_remote_id";s:32:"8f726b195ee3331aefd32c363f97ace6";s:6:"offset";b:0;s:8:"viewmode";s:4:"full";s:26:"navigation_part_identifier";s:23:"ezcontentnavigationpart";s:10:"node_depth";s:1:"3";s:9:"url_alias";s:18:"Mirror/Nabil-Alimi";s:16:"current_language";s:6:"eng-US";s:13:"language_mask";s:1:"2";s:12:"main_node_id";s:3:"232";s:19:"main_node_url_alias";b:0;s:19:"persistent_variable";a:2:{s:9:"left_menu";b:0;s:10:"extra_menu";b:0;}s:11:"class_group";b:0;s:5:"state";a:1:{i:2;s:1:"1";}s:16:"state_identifier";a:1:{i:0;s:18:"ez_lock/not_locked";}s:15:"parent_class_id";s:1:"1";s:23:"parent_class_identifier";s:6:"folder";s:21:"parent_node_remote_id";s:32:"418ada46ecd2d42b7744e9cee6c51085";s:23:"parent_object_remote_id";s:32:"5b6a5a0179108fb40b786874ab09d743";}s:13:"template_list";a:3:{i:0;s:64:"extension/ezecosystem/design/eze/templates/tagcloud/tagcloud.tpl";i:1;s:61:"design/standard/templates/content/datatype/view/ezxmltext.tpl";i:2;s:66:"extension/ezwebin/design/ezwebin/templates/parts/blog/calendar.tpl";}s:9:"cache_ttl";i:-1;}