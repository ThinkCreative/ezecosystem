a:10:{s:7:"content";s:38573:"
<div class="class-blog extrainfo">
    <div class="columns-blog float-break">
        <div class="main-column-position">
            <div class="main-column float-break">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
            
                                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Netgen">Netgen</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://www.netgen.hr/Blog/Dear-Santa" title="Dear Santa...">Dear Santa...</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      <p>Couple of months ago, Netgen crew decided to give its best in one particular task; we wanted to get in touch and try to agree a visit to Zagreb from one famous northerner. It took a lot of diplomacy skills and even a long trip to the foothill of Korvatunturi, near Rovaniemi in the Lapland, to get his confirmation! We were all very happy when the day came, but, as you can imagine, the youngest of us were especially joyful...</p><p>Inside info: Only one elf accompanied Mr. Claus and he came in a strange looking grey car(!) which was referred to as 'The arrow'. The elf mysteriously vanished from all the pictures taken that night...</p><p>Couple of pics... (Mr. Claus was not harmed in the making of last one)</p><table class="default" cellpadding="2" cellspacing="0" width="100%" summary="Pictures"><tr><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/100_2066/6506-1-cro-HR/100_2066_medium.jpg" width="200" height="150"  style="border: 0px solid ;" alt="100_2066" title="100_2066" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/p1010551_1/6514-1-cro-HR/P1010551_1_medium.jpg" width="200" height="150"  style="border: 0px solid ;" alt="P1010551_1" title="P1010551_1" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/p1010573_1/6522-1-cro-HR/P1010573_1_medium.jpg" width="200" height="150"  style="border: 0px solid ;" alt="P1010573_1" title="P1010573_1" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td></tr><tr class="bglight"><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/p1010606_1/6534-1-cro-HR/P1010606_1_medium.jpg" width="200" height="267"  style="border: 0px solid ;" alt="P1010606_1" title="P1010606_1" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/p1010578_1/6526-1-cro-HR/P1010578_1_medium.jpg" width="200" height="267"  style="border: 0px solid ;" alt="P1010578_1" title="P1010578_1" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td><td valign="top">  
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/media/images/p1010601_1/6530-1-cro-HR/P1010601_1_medium.jpg" width="200" height="267"  style="border: 0px solid ;" alt="P1010601_1" title="P1010601_1" />
            
    
    
    </div>

     </div>
</div>
</div>
  </td></tr>
</table>

    </div>

    <div class="attribute-url">
	<span>12/19/2011 05:52 am</span> &nbsp; <a href="http://www.netgen.hr/eng/Blog">www.netgen.hr/eng/Blog</a> &nbsp; <a href="/Mirror/Netgen/Dear-Santa">View mirror of item</a> &nbsp; <a href="http://www.netgen.hr/Blog/Dear-Santa">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Netgen">Netgen</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-eZ-Publish-Views-revealed" title="Confessions of an apprentice: eZ Publish Views revealed">Confessions of an apprentice: eZ Publish Views revealed</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      <p>In this article we will talk about the views of the modules in eZ Publish and look at the basic options you can access and modify. For that purpose, we’ll create a basic view with a few simple options which we’ll use to better explain the functionalities of a single view script, and, ultimately, we’ll link it to a template.</p><a name="eztoc6484_1" id="eztoc6484_1"></a><h2>eZ Publish Views</h2><p>Since we’ve created the <b>mymodule</b> module in the last article with a single view which redirects to the <a href="http://doc.ez.no" target="_blank">doc.ez.no</a>&nbsp;website, it would be a shame if we’d leave it at that. Each module can be comprised of one or more views, so let’s create a new view in our module. Go to the <b>extension/mypage/modules/mymodule</b> folder and open the<b>&nbsp;module.php</b> file. In it you’ll see our basic <b>redirect.php</b> view already defined. Let’s say that we’d like something more than just simple redirection. Therefore, we’ll define a new view in our module. Let’s call it <b>myview</b>, just to make thing simple. We will also create a form in this view, which will post the data from the form to the same view, and display it accordingly. To manage this whole operation and still be in the confines of our site, we’ll link our view to a template which will be created just for this purpose.</p><a name="eztoc6484_1_1" id="eztoc6484_1_1"></a><h3>Ordered and unordered parameters of a view</h3><p>To be able to successfully manage the task at hand, you should understand the concept of ordered and unordered parameters of a view. So, what are the ordered and unordered parameters?</p><p>You have probably already seen, once or twice, a part of an eZ Publish site looking like this: mysite.com/content/view/full/2. We’ll break this URL down again, but now for the specific purpose of understanding the ordered parameters of a view. So, as you can see, the first three parts of a URL are, after the last article, pretty easy to read, I think. You have the <b>name_of_page/module_name/view_name</b>. What are actually the <b>full/2</b> parts? Those are called the ordered parameters of a view. Why is there a need for such parameters? Well, mainly because of easier readability. Of course, one may wonder why would there be such a need. Because of the GET and POST data. You see, sometimes it’s not really readable when you get something like this:<b>&nbsp;?view_mode=full&node_id=2</b>. But it’s not just a matter of a link being easy on the eyes, it’s a matter of security as well. You’ll see what I mean if you read on.</p><p>Of course, as I mentioned, there are unordered parameters as well, and they look like this: <b>name_of_page/module_name/view_name/(param_1)/value_1/(param_2)/value_2</b>. The main difference between these parameters is that the ordered parameters have to be input in just the right order for your site not to display a kernel error or display the wrong data. The unordered parameters, on the other hand, can be input in any order possible, and it won’t affect the overall result of the data displayed by the view. Also, when listing the unordered parameters, they need to be listed behind the ordered ones in the view.</p><p>The best practice here would be to actually use the ordered parameters as main parameters used by the view for handling crucial data of the view, and to use unordered parameters as helper parameters in displaying that data. But, the ordered and unordered parameters of a view are not a must. You don’t need to use them in order for your view to work, and indeed, some of the views don’t use any of these parameters, as we’ve seen in the last article. Now, on to the main topic of the article, actually creating our new view.</p><a name="eztoc6484_1_2" id="eztoc6484_1_2"></a><h3>Setting up the view</h3><p>Remember how we set up the view in the last article? This won’t be any different, just a bit extended. So, create a new view in the <b>module.php</b> file of your extension like so:</p><pre>$ViewList['myview']= array(
'script' => 'myview.php',
'functions' => array( 'read' ),
'params' => array( 'node_id' ),
'unordered_params' => array ( 'offset' => 'Offset' )
);
</pre><p>And define the <b>read</b> function here like so:</p><pre>$FunctionList['read'] = array();</pre><p>So, what did we do here? We have defined a script name for our view, declared a policy function we wish for our view to use, some ordered parameters, in our case just one, the <b>node_id</b>, and some unordered parameters, in our case <b>offset</b>. After that, we’ve defined the <b>read</b> function which makes the view accessible to all users with proper rights.</p><p>After we’ve set up a view in such a manner, we need to create the PHP script for it. You probably already know the drill, but I’ll repeat it here again. Create the <b>myview.php</b> script in the same folder. Put in the following lines of code:</p><pre><?php
$http = eZHTTPTool::instance();
$Module = $Params['Module'];
$nodeID = 0;
if ( $http->hasPostVariable( 'node_id' ) )
{
$nodeID = (int) $http->postVariable( 'node_id' );
$Module->redirectToView( 'myview', array($nodeID) );
}
if ( isset( $Params['node_id'] ) )
{
$nodeID = (int) $Params['node_id'];
}
$offset = (int) $Params['Offset'];
$tpl = eZTemplate::factory();
$tpl->setVariable( 'view_parameters', array( 'offset' => $offset ) );
$Result = array();
$Result['content'] = $tpl->fetch('design:mymodule/myview.tpl');
$Result['path'] = array( array( 'url' => 'mymodule/myview',&nbsp;'text' => 'My view' ) );
?></pre><p>In this script we’ve done all of the back-end preparations for our view. So, we’ve defined some basic variables which almost every view uses. We have instanced the<b>&nbsp;eZHTTPTool</b> which is a very crafty and versatile tool which helps you with all the user data you wish your view to handle.</p><p>After that, we’ve defined the <b>$Module</b> variable which is actually the module itself. Since it’s already an <b>eZModule</b> object, we can easily access the methods of the <b>eZModule</b> class. Then, we’ve created the <b>$nodeID</b> variable which we’ll use to store the node ID the user passes from the template view to the system in order to manipulate it. Subsequently, we have linked the<b>&nbsp;$nodeID</b> variable to the ordered parameter called <b>node_id</b>, and, we’ve declared that we want to redirect our script to the same view, but with an ordered parameter, i.e. our node ID.</p><p>Then we’ve instanced our template using the<b>&nbsp;factory()</b> method in the <b>eZTemplate</b> class. This is needed to link the view script to the template. We’ve set the <b>$offset</b> variable as an unordered parameter we wish our module to use. We declared that we want to set an additional variable in our template. It is called <b>view_parameters</b> and our offset will be in it.</p><p>We’ve created the <b>$Result</b> array which handles all of our content, and with the optional fields, we can define the path and name of the template our view will use. And then we’ve declared that we wish our view to use the <b>module/myview.tpl</b> template which is located in the <b>design/mypage/templates</b> folder of our extension for the content of this view. And in the end, we’ve determined a path which will be set in our page as the path for the view of this module.</p><a name="eztoc6484_1_3" id="eztoc6484_1_3"></a><h3>Setting up the Roles and Policies</h3><p>Well, your view is set up, but, it is still not accessible to everybody. We’ll correct that now. Go to the Administration interface, and click on the <b>User accounts</b> tab. On the left-hand menu, under the <b>Access Control</b> section, you have the <b>Roles and policies</b> link. After you click on that, you’ll see all of the User Groups you have on your page. Since this is a pretty simple module, with a pretty simple view, and we wish for everyone to see our masterwork, we’ll grant full access to the <b>read</b> function of the module to the Anonymous group.</p><p>So, click on <b>Anonymous</b>, then on the<b>&nbsp;Edit</b> button, and after that click on <b>New policy</b>. In here, you have the policy wizard. In the dropdown menus, for the Module, select <b>mymodule</b>, and for the Function, select<b>&nbsp;read</b>. After that, click on <b>Grant full access</b>. And you’ve set up your module so that anyone can read it.</p>
<div class=""><div class="content-view-embed">
<div class="class-image">
    <div class="attribute-image">

    
        
    
                                                                                                                                            <img src="http://www.netgen.hr/var/ezflow_site/storage/images/blog/confessions-of-an-apprentice-ez-publish-views-revealed/administration-interface-roles-and-policies-wizard/6510-1-cro-HR/Administration-Interface-Roles-and-Policies-Wizard_large.png" width="360" height="111"  style="border: 0px solid ;" alt="Administration Interface Roles and Policies Wizard" title="Administration Interface Roles and Policies Wizard" />
            
    
    
    </div>

                                        <div class="attribute-caption" style="width: 360px">
                
<p>Administration Interface Roles and Policies Wizard</p> </div>
         </div>
</div>
</div><a name="eztoc6484_1_4" id="eztoc6484_1_4"></a><h3>Setting up the template</h3><p>Wait a minute, you’ll say, where is the view template? Don’t worry, we’ll create one now. So, as we’ve already declared the position of our template, let’s navigate to that location, shall we? Go to <b>extension/mypage/design/mypage/templates/mymodule</b> folder. Create a new template called <b>myview.tpl</b> in it. This is the template we’ll use to actually display some data on the page for the user to manipulate with.</p><p>Input some data in the newly created view like so:</p><pre>{def $module_parameters = module_params()}
<form action="" method="post">
<label for="node_id">Enter a node ID</label>
<input type="text" name="node_id" id="node_id" />
<input type="submit" value="Search for node" />
</form>
{if is_set($module_parameters.parameters.node_id)}
{def $node_fetch = fetch('content', 'node', hash( 'node_id', $module_parameters.parameters.node_id ) ) }
{if is_set($node_fetch)}
The name of the node is: {$node_fetch.name}<br />
The class of the object in the node is: {$node_fetch.object.class_name}
{else}
The node does not exist!
{/if}
{/if}</pre><p>As you can see, there is a nifty little operator called <b>module_params()</b> created in eZ Publish which takes the name of the module, the view of the module, and it’s ordered parameters and puts it in a neat associative array. We have linked that array to the <b>$module_parameters</b> variable in the template, so we can access our ordered parameters which we’ve defined during the creation of the view. Then, we’ve created a form which we’ll use to actually set an ordered parameter from. After that, if the <b>node_id</b> parameter of the view is not set, nothing will happen, but if it is, we’ll try to <b>fetch</b> the node ID which was input in the form. If the node ID doesn’t exist, we’ll output the appropriate message, and if it does exist, we’ll display the name of the node, and the class of the object which is encapsulated by the node.</p><p>And if you enter number 2, for example, in the created form, you’ll see that the module redirected us to the same view, but the URL will take on the next form: <b>mypage/mymodule/myview/2</b> - which means that we’ve determined our ordered parameters successfully.</p><p>And that’s about it regarding this article. It was a long one, and I hope you were able to keep up with everything, but I also hope that you’ll be able to create your own modules and appropriate views for them after this article and the last one. Of course, the learning part doesn’t stop here, as you can expand the current view to do even more. Since we’ve started off simple, we’ll end on this note.</p><p>Until next time, I wish you happy coding,</p><p>Tomislav</p>
    </div>

    <div class="attribute-url">
	<span>12/19/2011 05:09 am</span> &nbsp; <a href="http://www.netgen.hr/eng/Blog">www.netgen.hr/eng/Blog</a> &nbsp; <a href="/Mirror/Netgen/Confessions-of-an-apprentice-eZ-Publish-Views-revealed">View mirror of item</a> &nbsp; <a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-eZ-Publish-Views-revealed">View item</a>
    </div>

        

    </div>
</div>                            
<div class="content-view-line">
    <div class="class-blog-post float-break">

    <div class="attribute-header">
        <h1><a href="/Mirror/Netgen">Netgen</a></h1>
     </div>
    <div class="attribute-header">
        <h2>> <a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-Creating-eZ-Publish-modules" title="Confessions of an apprentice: Creating eZ Publish modules">Confessions of an apprentice: Creating eZ Publish modules</a></h2>
     </div>

    <div class="attribute-byline">
	    </div>

    

    <div class="attribute-body float-break">
      <p>In the last article we have created our own template operator, introducing a new functionality to our eZ Publish extension and, ultimately, to the whole site. But what happens if we want to introduce a whole set of functionalities wrapped in a neat package? The answer is: modules. Creation of a new module is relatively easy and painless, and it can really help out in situations ranging from a simple modification to the existing code (for example, if you have a segment of a site which does one thing, and you need such a segment to do the same thing but with different parameters), to setting up a whole range of features you won’t find in the regular extensions or the modules found in the eZ Publish installation.</p><a name="eztoc6448_1" id="eztoc6448_1"></a><h2>Creation of modules in eZ Publish</h2><a name="eztoc6448_1_1" id="eztoc6448_1_1"></a><h3>What is a module anyway?</h3><p>Well, the easiest explanation would be: a module is a set of views. You know views, you’ve probably overridden the templates for a view or two. The basic modules are defined in the <b>module.ini</b> file which is located in the <b>settings</b> folder of your eZ Publish installation. And if you open that file, you’ll see a list of all the modules which are installed by default. Just be sure not to modify that file since modifying it will screw up your installation. Consider yourself warned. So, you can see a pretty big list of modules such as <b>class</b>, <b>collaboration</b>, <b>error</b>, <b>package</b>, <b>pdf</b>, etc. And even though all of those modules are useful and needed, the actual user only sees a handful of those.</p><p>You’re probably wondering how a person even accesses a module. The short and simple answer is: through the url. What you see on a page in the address bar is actually just the url aliases of the parts of a page you are accessing. In actuality, what you access is a module, and a view defined in that module, with some parameters defined for good measure. The first module, and probably the most commonly used is the <b>content</b> module. When you open a page for the first time, you’re actually viewing the following url: <b>http://name_of_page/content/view/full/2</b>. The<b>&nbsp;/content/view/full/2</b> is something probably unfamiliar to those who are beginners in eZ Publish, so I’ll break it down for easy explanation. The /<b>content</b>/ part is the name of the module, /<b>view</b>/ is the name of the view, /<b>full</b>/ is the view mode, and /<b>2</b> is the node id accessed. How do we know this? Where is this module located? Why, in the kernel, of course!</p><p>If you look at the kernel folder, you’ll see a folder in it for every module available. Each of these folders has a set of PHP scripts which relate to each and every view of a module, and the <b>module.php</b> file which relates to the module in question. Now, this file is the key file in the creation of a module. It defines all of the views and the parameters this module will have. And some of the PHP files which relate to views have a template file in the templates folder of the design of your page. As you can see, the views are PHP scripts which handle certain actions a website can perform (like a JSON interface or redirections, just to name a few), and not all of them have a template assigned to them. It is also important to keep in mind that a template is just a visual representation of a view. And a module is an HTTP interface which provides a grouping of such views.</p><p>You’re probably scratching your head now, re-reading this last paragraph, and trying to figure it out. Have no fear, and read on, we’ll tackle the creation of modules which will most definitely clear out some of the issues.</p><a name="eztoc6448_1_2" id="eztoc6448_1_2"></a><h3>Creation of a module</h3><p>The first thing you need to set up is the ini file. For the remainder of this series, I’ll assume you have a test installation of eZ Publish, and that it’s called mypage with an already set up extension of the same name. You need to put a new appendix to the existing module.ini file in the settings folder of your extension. Create a new file called <b>module.ini.append.php</b> in your <b>/extension/mypage/settings </b>folder, and put the following lines of code in it:</p><pre>[ModuleSettings]
ExtensionRepositories[]=mypage
ModuleList[]=mymodule</pre><p>With this, you have declared that you want your extension to contain additional modules, and you’ve declared a name for your module. Also, since you’ve put this module just in the <b>/extension/mypage/settings </b>folder, and not in any of the folders in the <b>/extension/mypage/settings/siteaccess </b>folder, this module will be accessible from every siteaccess.</p><p>After that, you need to actually define the module. And in that purpose, create the next folder: <b>/extension/mypage/modules/mymodule/</b> and put a PHP file in it which you’ll name <b>module.php</b>. Also, open this file, and put the following lines of code in it:</p><pre>$Module = array( 'name' => 'mymodule', 'variable_params' => false, 'ui_component_match' => 'module' );
$ViewList = array();
$FunctionList = array()
</pre><p>As you can see, we have created three arrays here which define the settings and data for the module. The $Module array relates to the module itself, it’s name, and some general parameters we wish the module to use. The $ViewList array is an array composed of the definitions of views you wish the module to handle, and last but not least, $FunctionList is a list of policy functions you wish the module to use. Which is basically assignment to different groups of users who can handle the views. So, let’s fill some of those arrays with data, shall we?</p><p>To make things simple, I’ll create a view which will redirect a user to the <a href="http://doc.ez.no/" target="_blank">doc.ez.no</a> website, that is, to the documentation page for eZ Publish. I still won’t teach you how to actually assign a template to this view, because it will be a simple redirection, so we won’t need a template, only the PHP script to do its stuff.</p><p>Under the line in which you’ve defined the $ViewList array, put in the following lines of code:</p><pre>$ViewList['redirect']= array(
'script' => 'redirect.php'
);</pre><p>What we’ve basically done here is, we’ve defined a view called redirect, and a script for that view which will be performed after we access the url: http://mypage/mymodule/redirect, and it will redirect us to the <a href="http://doc.ez.no/" target="_blank">doc.ez.no</a> website.</p><p>The next step is the creation of mentioned script. So, create a file in the same folder called redirect.php and put the following lines of code inside:</p><pre><?php
eZHTTPTool::redirect('http://doc.ez.no');
?>
</pre><p>Now, bear in mind, since we didn’t put any policy functions in our view, it will only work if you’re logged in as the administrator of the page. For a view to function properly, you need to define additional parameters which will further extend all the possibilities a view can perform. But, all of those will be covered in the next article when we’ll talk about setting up a view, and defining functions of that view. We’ll cover the template part of the view also.</p><p>Clear the Global cache, and go to the url <b>http://mypage/mymodule/redirect</b> and hopefully, if you set up everything as described, you will be redirected to the <a href="http://doc.ez.no/" target="_blank">doc.ez.no</a> website.</p><p>As you can see, the actual creation of a module is not that hard, and it’s really a matter of your needs. And as I said before, you can rely on modules to do some additional stuff your default installation of eZ Publish doesn’t cover. With that said, look forward to the next article when we break down a view, and define parameters of that view.</p><p>
Until next time, I wish you happy coding,<br />Tomislav</p>
    </div>

    <div class="attribute-url">
	<span>12/05/2011 04:03 am</span> &nbsp; <a href="http://www.netgen.hr/eng/Blog">www.netgen.hr/eng/Blog</a> &nbsp; <a href="/Mirror/Netgen/Confessions-of-an-apprentice-Creating-eZ-Publish-modules">View mirror of item</a> &nbsp; <a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-Creating-eZ-Publish-modules">View item</a>
    </div>

        

    </div>
</div>                        
                  

 

                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>

        <div class="extrainfo-column-position">
            <div class="extrainfo-column">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
                                                <div class="attribute-tag-cloud">
                        <p>
                            
                        </p>
                        </div>

                        <div class="attribute-description">
                            
                        </div>

                        <div class="attribute-tags">
                            <h1>Tags</h1>
                            <ul>
                                                        </ul>
                        </div>

                        <div class="attribute-archive">
                            <h1>Archive</h1>
                            <ul>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2014" title="">August 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2014" title="">July 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2014" title="">May 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2014" title="">April 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2014" title="">March 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2014" title="">February 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2014" title="">January 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/12/(year)/2013" title="">December 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2013" title="">November 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/10/(year)/2013" title="">October 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2013" title="">September 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2013" title="">August 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2013" title="">July 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2013" title="">June 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2013" title="">May 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2013" title="">April 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2013" title="">March 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2013" title="">February 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2013" title="">January 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2012" title="">November 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2012" title="">September 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2012" title="">August 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2012" title="">July 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2012" title="">June 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2012" title="">May 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2012" title="">April 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2012" title="">March 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2012" title="">February 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2012" title="">January 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/12/(year)/2011" title="">December 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2011" title="">November 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/10/(year)/2011" title="">October 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2011" title="">September 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2011" title="">August 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2011" title="">June 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2011" title="">May 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2011" title="">April 2011</a></li>
                                                        </ul>
                        </div>

                        <!--START: CAL NAV -->
                                                                                                                                                                                                                                            
<div class="calendar">
<div class="calendar-tl"><div class="calendar-tr"><div class="calendar-bl"><div class="calendar-br">
<div class="content">

<div class="month">
<div class="previous">
<p><a href="/Mirror/Netgen/(month)/11/(year)/2011" title="Previous month">&#8249;&#8249;<span class="hide"> Previous month</span></a></p>
</div>
<div class="next">
<p><a href="/Mirror/Netgen/(month)/1/(year)/2012" title="Next month"><span class="hide">Next month </span>&#8250;&#8250;</a></p>
</div>
<h2>December&nbsp;2011</h2>
</div>

<div class="table">
<table cellspacing="0" border="0" summary="Calendar">
<tr class="top">
    <th class="left">Mon</th>
    <th>Tue</th>
    <th>Wed</th>
    <th>Thu</th>
    <th>Fri</th>
    <th>Sat</th>
    <th class="right">Sun</th>
</tr>                <tr class="">
                                            <td class="left">&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            <td class="currentselected ">
            1
        </td>
                            <td class=" ">
            2
        </td>
                            <td class=" ">
            3
        </td>
                                        <td class="  right">
            4
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            <em><a href="/Mirror/Netgen/(day)/5/(month)/12/(year)/2011">5</a></em>
        </td>
                            <td class=" ">
            6
        </td>
                            <td class=" ">
            7
        </td>
                            <td class=" ">
            8
        </td>
                            <td class=" ">
            9
        </td>
                            <td class=" ">
            10
        </td>
                                        <td class="  right">
            11
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            12
        </td>
                            <td class=" ">
            13
        </td>
                            <td class=" ">
            14
        </td>
                            <td class=" ">
            15
        </td>
                            <td class=" ">
            16
        </td>
                            <td class=" ">
            17
        </td>
                                        <td class="  right">
            18
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            <em><a href="/Mirror/Netgen/(day)/19/(month)/12/(year)/2011">19</a></em>
        </td>
                            <td class=" ">
            20
        </td>
                            <td class=" ">
            21
        </td>
                            <td class=" ">
            22
        </td>
                            <td class=" ">
            23
        </td>
                            <td class=" ">
            24
        </td>
                                        <td class="  right">
            25
        </td>
                </tr>
                        <tr class="bottom">
                    <td class="  left">
            26
        </td>
                            <td class=" ">
            27
        </td>
                            <td class=" ">
            28
        </td>
                            <td class=" ">
            29
        </td>
                            <td class=" ">
            30
        </td>
                            <td class=" ">
            31
        </td>
                                <td class="right">&nbsp;</td>
                                    </tr>
        </table>
</div>

</div>
</div></div></div></div>
</div>

<!-- END: CAL NAV -->                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>
    </div>
</div>";s:15:"view_parameters";a:5:{s:6:"offset";b:0;s:4:"year";s:4:"2011";s:5:"month";s:2:"12";s:3:"day";b:0;s:10:"namefilter";b:0;}s:4:"path";a:3:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:6:"Netgen";s:3:"url";b:0;s:9:"url_alias";b:0;s:7:"node_id";s:3:"228";}}s:10:"title_path";a:3:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:3:{s:4:"text";s:6:"Netgen";s:3:"url";b:0;s:9:"url_alias";b:0;}}s:10:"section_id";s:1:"1";s:7:"node_id";s:3:"228";s:15:"navigation_part";s:23:"ezcontentnavigationpart";s:12:"content_info";a:24:{s:9:"object_id";s:3:"226";s:7:"node_id";s:3:"228";s:14:"parent_node_id";s:3:"216";s:8:"class_id";s:2:"19";s:16:"class_identifier";s:4:"blog";s:9:"remote_id";s:32:"7f359aaa74ea9081f7b9d7c57013072d";s:14:"node_remote_id";s:32:"80d65711644b755185f988f146faca0d";s:6:"offset";b:0;s:8:"viewmode";s:4:"full";s:26:"navigation_part_identifier";s:23:"ezcontentnavigationpart";s:10:"node_depth";s:1:"3";s:9:"url_alias";s:13:"Mirror/Netgen";s:16:"current_language";s:6:"eng-US";s:13:"language_mask";s:1:"2";s:12:"main_node_id";s:3:"228";s:19:"main_node_url_alias";b:0;s:19:"persistent_variable";a:2:{s:9:"left_menu";b:0;s:10:"extra_menu";b:0;}s:11:"class_group";b:0;s:5:"state";a:1:{i:2;s:1:"1";}s:16:"state_identifier";a:1:{i:0;s:18:"ez_lock/not_locked";}s:15:"parent_class_id";s:1:"1";s:23:"parent_class_identifier";s:6:"folder";s:21:"parent_node_remote_id";s:32:"418ada46ecd2d42b7744e9cee6c51085";s:23:"parent_object_remote_id";s:32:"5b6a5a0179108fb40b786874ab09d743";}s:13:"template_list";a:3:{i:0;s:64:"extension/ezecosystem/design/eze/templates/tagcloud/tagcloud.tpl";i:1;s:61:"design/standard/templates/content/datatype/view/ezxmltext.tpl";i:2;s:66:"extension/ezwebin/design/ezwebin/templates/parts/blog/calendar.tpl";}s:9:"cache_ttl";i:-1;}