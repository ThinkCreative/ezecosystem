a:10:{s:7:"content";s:20330:"
<div class="class-blog extrainfo">
    <div class="columns-blog float-break">
        <div class="main-column-position">
            <div class="main-column float-break">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">

                        <div class="content-view-full">
                            <div class="class-blog-post float-break">

                                <div class="attribute-header">
                                    <h1>Confessions of an apprentice: How to create and use custom fetch functions in eZ Publish</h1>
                                </div>

                                <div class="attribute-byline">
				    <div><a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-How-to-create-and-use-custom-fetch-functions-in-eZ-Publish">Read Original Item</a></div><br />
                                </div>

                                <div class="attribute-byline">
                                    <p class="date">05/07/2012 06:37 am</p>
                                    <p class="author">info@netgen.hr (Tomislav Buljević)</p>
				                                    </div>

				

				<div class="attribute-body float-break">
				      <p>Last time we have created a new database table, linked it to a new class we created specifically for this purpose, and learned how to extend the&nbsp;<b>eZPersistentObject</b> class which is used for all the data manipulation.</p><p>This time, we will learn how to actually use all of the features we’ve created last time in the templates. Of course, as always, I’ll create a simple example which will use as a foundation for all of your work in eZ Publish, as you progress to truly being a wizard.<b>&nbsp;</b></p><a name="eztoc8278_1" id="eztoc8278_1"></a><h2>Setting up fetch functions</h2><a name="eztoc8278_1_1" id="eztoc8278_1_1"></a><h3>Creating custom fetch functions</h3><p>The first thing you need to create are two PHP files for your module:<b>&nbsp;function_definition.php</b> and <b>mymodulefunctioncollection.php</b>. As you can see from the names of the files, <b>mymodulefunctioncollection.php</b> is a collection of all the functions that our fetch functions will use in the PHP side of the module, and<b>&nbsp;function_definition.php</b> is the PHP script which defines the names and parameters of our fetch functions.</p><p>First off, create the<b>&nbsp;mymodulefunctioncollection.php</b> in the <b>modules/mymodule</b> folder of your extension. This is actually a PHP class which will have a few of the functions we need in the templates. Let’s fill it up with some code, shall we?</p><pre><?php

class myModuleFunctionCollection
{
public static function fetchDiscountCodes( $offset=false, $limit = false )
{
$limits = null;
if ( is_numeric( $offset ) || is_numeric( $limit ) )
{
$limits = array();
$limits['offset'] = is_numeric( $offset ) ? (int) $offset : 0;
$limits['length'] = is_numeric( $limit ) ? (int) $limit : 15;
}

$fetchResult = myDiscountCode::fetchList( null, $limits );

if ( is_array( $fetchResult ) && !empty( $fetchResult ) )
return array( 'result' => $fetchResult );

return array( 'result' => false );
}

public static function fetchDiscountCodesCount()
{
$fetchResult = myDiscountCode::fetchCount();
if ( is_numeric( $fetchResult ) )
return array( 'result' => (int) $fetchResult );

return array( 'result' => 0 );
}
}

?></pre><p>
As you can see, we have defined two methods here: <b>fetchDiscountCodes()</b>, and <b>fetchDiscountCodesCount()</b>. The <b>fetchDiscountCodes()</b> method will take two parameters,<b>&nbsp;$offset</b> and <b>$limit</b> which will serve as parameters for one of the fetch functions. With those, we can define how much of the codes we want to fetch at once, and where in the table to begin fetching results, assuming we have a bunch of codes in our table. Since we already have a <b>fetchList()</b> method defined in the&nbsp;<b>myDiscountCode</b> class, we will just return a result according to those parameters. Therefore, we check if <b>$offset</b> and <b>$limit</b> are numeric values, and if either of them is a numeric value, we will set an offset value or a limit value to our <b>$limits</b> array accordingly. If none of them is a numeric value, we set them to some default values. In this case, I have chosen these values to be 0 for offset and 15 for limit, but you can set them to whichever values you’d like. After that, we just call the <b>fetchList()</b> method from the <b>myDiscountCode</b> class and apply those limits to it. When this function is called from a template, it will return either a false result, in case no data is in the table or if offset and limit are invalid or out of range, or a list of the <b>myDiscountCode</b> objects within specified limits.<br />The second function we have created is the fetchDiscountCodesCount() function which we’ll use to count all of the rows in the database table. And if there is data in the table, we will get a number of all the rows in it, otherwise, we will get a zero count.</p><p>The next step is to modify the function_definition.php file we’ve created. This file is the place where we create definitions for our fetch functions. As you will see in a moment, the structure of this file is very similar to the actual module.php file&nbsp;itself. We’ll start coding it like so:</p><pre><?php

$FunctionList = array();

$FunctionList['discount_codes'] = array( 
'name' => 'discount_codes',
'call_method' => array( 'class' => 'myModuleFunctionCollection', 'method' => 'fetchDiscountCodes' ),
'parameter_type' => 'standard',
'parameters' => array( array( 'name' => 'offset', 'type' => 'integer', 'required' => false, 'default' => 0 ), array( 'name' => 'limit', 'type' => 'integer', 'required' => false, 'default' => 15 ) )
);

$FunctionList['discount_codes_count'] = array(
'name' => 'discount_codes_count',
'call_method' => array( 'class' => 'myModuleFunctionCollection', 'method' => 'fetchDiscountCodesCount' ),
'parameter_type' => 'standard',
'parameters' => array()
);

?></pre><p>OK, so what do we see here? We have defined a <b>$FunctionList</b> array and put in it two keys called <b>discount_codes</b> and <b>discount_codes_count</b>. Each of these keys is an array which contains the following keys: <b>name</b>, <b>call_method</b>, <b>parameter_type</b>, and <b>parameters</b>.</p><p>The <b>name</b> key speaks for itself, it’s the name of the function we need to call. The <b>call_method</b> key is the key in which we define an array of the class and method this particular function uses, therefore, we’ll use our function collection and a method from it which matches the function we’d like to perform. The <b>parameter_type</b> key is a deprecated feature which is here because of backwards compatibility with the previous versions. And the last key is parameters. Its value is an array which consists of inner arrays which define the parameters we want to pass onto a function one by one. In the case of the <b>discount_codes</b> function, we have determined two integer parameters, ‘offset’ and ‘limit’, both of which are optional, and have default values of 0 and 15 respectively.</p><p>At the end of the day, when you test your code, if everything is set up properly, you’ll be able to write something like this:</p><pre>{def $discount_codes_fetch = fetch(‘mymodule’, ‘discount_codes’)}</pre><p>and get a list of discount codes.</p><a name="eztoc8278_1_2" id="eztoc8278_1_2"></a><h3>Using fetch functions in the templates</h3><p>Let’s say that you want to set up a template which will have a main purpose of editing discount codes in the database table. We will use both fetch functions we created to demonstrate their use. This is just a fragment of a larger code involving a form which submits the changes:</p><pre>{def $codes = fetch(mymodule, discount_codes, hash( offset, first_set( $view_parameters.offset, 0 ) ) )}
{def $codes_count = fetch(mymodule, discount_codes_count)}

{if $codes_count|gt( 0 )}
{foreach $codes as $code}
<tr>
<td><input type="checkbox" value="{$code.id}" name="CodeIDArray[]" /></td>
<td>{$code.discount_code|wash}</td>
<td>{$code.valid_from|datetime('custom', '%Y-%m-%d %H:%i')}</td>
<td>{$code.valid_to|datetime('custom', '%Y-%m-%d %H:%i')}</td>
<td><a href={concat('mymodule/editdiscountcode/', $code.id)|ezurl}><img src={'edit.gif'|ezimage} alt="Edit discount code" /></a></td>
</tr>
{/foreach}
{/if}</pre><p>
As you can see, after we fetched the codes count and the codes themselves, we created an HTML table inside the template which displays all of the relevant information regarding our discount codes. Also, at the end of each row in the table, we added an Edit link which will enable us to add new codes, and edit the existing ones.<br />
In the next article, we will deal with the necessary views for our discount codes to be fully functional.<br />
Until next time, I wish you happy coding,<br />Tomislav</p>
				</div>

                                
                                <div class="attribute-byline">
				    <div><a href="http://www.netgen.hr/Blog/Confessions-of-an-apprentice-How-to-create-and-use-custom-fetch-functions-in-eZ-Publish">Read Original Item</a></div>
                                </div>

                                                            </div>
                        </div>

                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>

        <div class="extrainfo-column-position">
            <div class="extrainfo-column">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
                                                <div class="attribute-tag-cloud">
                        <p>
                            
                        </p>
                        </div>

                        <div class="attribute-description">
                            
                        </div>

                        <div class="attribute-tags">
                            <h1>Tags</h1>
                            <ul>
                                                        </ul>
                        </div>

                        <div class="attribute-archive">
                            <h1>Archive</h1>
                            <ul>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2014" title="">August 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2014" title="">July 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2014" title="">May 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2014" title="">April 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2014" title="">March 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2014" title="">February 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2014" title="">January 2014</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/12/(year)/2013" title="">December 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2013" title="">November 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/10/(year)/2013" title="">October 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2013" title="">September 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2013" title="">August 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2013" title="">July 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2013" title="">June 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2013" title="">May 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2013" title="">April 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2013" title="">March 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2013" title="">February 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2013" title="">January 2013</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2012" title="">November 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2012" title="">September 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2012" title="">August 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/7/(year)/2012" title="">July 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2012" title="">June 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2012" title="">May 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2012" title="">April 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/3/(year)/2012" title="">March 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/2/(year)/2012" title="">February 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/1/(year)/2012" title="">January 2012</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/12/(year)/2011" title="">December 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/11/(year)/2011" title="">November 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/10/(year)/2011" title="">October 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/9/(year)/2011" title="">September 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/8/(year)/2011" title="">August 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/6/(year)/2011" title="">June 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/5/(year)/2011" title="">May 2011</a></li>
                                                            <li><a href="/Mirror/Netgen/(month)/4/(year)/2011" title="">April 2011</a></li>
                                                        </ul>
                        </div>

                        <!--START: CAL NAV -->
                                                                                                                                                            
<div class="calendar">
<div class="calendar-tl"><div class="calendar-tr"><div class="calendar-bl"><div class="calendar-br">
<div class="content">

<div class="month">
<div class="previous">
<p><a href="/Mirror/Netgen/(month)/7/(year)/2014" title="Previous month">&#8249;&#8249;<span class="hide"> Previous month</span></a></p>
</div>
<div class="next">
<p><a href="/Mirror/Netgen/(month)/9/(year)/2014" title="Next month"><span class="hide">Next month </span>&#8250;&#8250;</a></p>
</div>
<h2>August&nbsp;2014</h2>
</div>

<div class="table">
<table cellspacing="0" border="0" summary="Calendar">
<tr class="top">
    <th class="left">Mon</th>
    <th>Tue</th>
    <th>Wed</th>
    <th>Thu</th>
    <th>Fri</th>
    <th>Sat</th>
    <th class="right">Sun</th>
</tr>                <tr class="">
                                            <td class="left">&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            <td class=" ">
            1
        </td>
                            <td class=" ">
            2
        </td>
                                        <td class="  right">
            3
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            4
        </td>
                            <td class=" ">
            5
        </td>
                            <td class=" ">
            6
        </td>
                            <td class=" ">
            7
        </td>
                            <td class=" ">
            8
        </td>
                            <td class=" ">
            9
        </td>
                                        <td class="  right">
            10
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            11
        </td>
                            <td class=" ">
            12
        </td>
                            <td class=" ">
            13
        </td>
                            <td class=" ">
            14
        </td>
                            <td class=" ">
            15
        </td>
                            <td class=" ">
            16
        </td>
                                        <td class="  right">
            17
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            <em><a href="/Mirror/Netgen/(day)/18/(month)/8/(year)/2014">18</a></em>
        </td>
                            <td class=" ">
            19
        </td>
                            <td class=" ">
            20
        </td>
                            <td class=" ">
            <em><a href="/Mirror/Netgen/(day)/21/(month)/8/(year)/2014">21</a></em>
        </td>
                            <td class=" ">
            22
        </td>
                            <td class=" ">
            23
        </td>
                                        <td class="  right">
            24
        </td>
                </tr>
                        <tr class="bottom">
                    <td class="  left">
            25
        </td>
                            <td class=" ">
            26
        </td>
                            <td class="currentselected today">
            27
        </td>
                            <td class=" ">
            28
        </td>
                            <td class=" ">
            29
        </td>
                            <td class=" ">
            30
        </td>
                                        <td class="  right">
            31
        </td>
                </tr>
        </table>
</div>

</div>
</div></div></div></div>
</div>

<!-- END: CAL NAV -->                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>
    </div>
</div>";s:15:"view_parameters";a:5:{s:6:"offset";b:0;s:4:"year";b:0;s:5:"month";b:0;s:3:"day";b:0;s:10:"namefilter";b:0;}s:4:"path";a:4:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:6:"Netgen";s:3:"url";s:22:"/content/view/full/228";s:9:"url_alias";s:13:"Mirror/Netgen";s:7:"node_id";s:3:"228";}i:3;a:4:{s:4:"text";s:88:"Confessions of an apprentice: How to create and use custom fetch functions in eZ Publish";s:3:"url";b:0;s:9:"url_alias";b:0;s:7:"node_id";s:4:"5084";}}s:10:"title_path";a:4:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:6:"Netgen";s:3:"url";s:22:"/content/view/full/228";s:9:"url_alias";s:13:"Mirror/Netgen";s:7:"node_id";s:3:"228";}i:3;a:3:{s:4:"text";s:88:"Confessions of an apprentice: How to create and use custom fetch functions in eZ Publish";s:3:"url";b:0;s:9:"url_alias";b:0;}}s:10:"section_id";s:1:"1";s:7:"node_id";s:4:"5084";s:15:"navigation_part";s:23:"ezcontentnavigationpart";s:12:"content_info";a:24:{s:9:"object_id";s:4:"5084";s:7:"node_id";s:4:"5084";s:14:"parent_node_id";s:3:"228";s:8:"class_id";s:2:"20";s:16:"class_identifier";s:9:"blog_post";s:9:"remote_id";s:44:"RSSImport_9_3215afb7367b9a4f1e2cb393068b8298";s:14:"node_remote_id";s:32:"acd4dbad0375fa3b2703e979db323d4c";s:6:"offset";b:0;s:8:"viewmode";s:4:"full";s:26:"navigation_part_identifier";s:23:"ezcontentnavigationpart";s:10:"node_depth";s:1:"4";s:9:"url_alias";s:101:"Mirror/Netgen/Confessions-of-an-apprentice-How-to-create-and-use-custom-fetch-functions-in-eZ-Publish";s:16:"current_language";s:6:"eng-US";s:13:"language_mask";s:1:"2";s:12:"main_node_id";s:4:"5084";s:19:"main_node_url_alias";b:0;s:19:"persistent_variable";a:2:{s:9:"left_menu";b:0;s:10:"extra_menu";b:0;}s:11:"class_group";b:0;s:5:"state";a:1:{i:2;s:1:"1";}s:16:"state_identifier";a:1:{i:0;s:18:"ez_lock/not_locked";}s:15:"parent_class_id";s:2:"19";s:23:"parent_class_identifier";s:4:"blog";s:21:"parent_node_remote_id";s:32:"80d65711644b755185f988f146faca0d";s:23:"parent_object_remote_id";s:32:"7f359aaa74ea9081f7b9d7c57013072d";}s:13:"template_list";a:3:{i:0;s:64:"extension/ezecosystem/design/eze/templates/tagcloud/tagcloud.tpl";i:1;s:61:"design/standard/templates/content/datatype/view/ezxmltext.tpl";i:2;s:66:"extension/ezwebin/design/ezwebin/templates/parts/blog/calendar.tpl";}s:9:"cache_ttl";i:-1;}