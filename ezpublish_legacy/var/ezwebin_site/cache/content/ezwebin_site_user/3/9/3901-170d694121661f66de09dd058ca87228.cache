a:10:{s:7:"content";s:27324:"
<div class="class-blog extrainfo">
    <div class="columns-blog float-break">
        <div class="main-column-position">
            <div class="main-column float-break">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">

                        <div class="content-view-full">
                            <div class="class-blog-post float-break">

                                <div class="attribute-header">
                                    <h1>Comprendre le fonctionnement bas-niveau du cache eZ Publish : La compilation des templates (Article 2)</h1>
                                </div>

                                <div class="attribute-byline">
				    <div><a href="http://gandbox.fr/Blogs/Technologies-Web/Comprendre-le-fonctionnement-bas-niveau-du-cache-eZ-Publish-La-compilation-des-templates-Article-2">Read Original Item</a></div><br />
                                </div>

                                <div class="attribute-byline">
                                    <p class="date">03/11/2012 07:15 pm</p>
                                    <p class="author"></p>
				                                    </div>

				

				<div class="attribute-body float-break">
				      
<div><p>Afin de comprendre le rôle du « cache de vue » ou des « cache blocks » (détaillé dans les prochains chapitres), il est important au préalable de bien différencier deux concepts qui sont souvent confondus :</p>
<ul>
<li>La <b>compilation des templates</b>, qui est abordé dans ce chapitre</li>
<li>Le <b>cache de template</b>, qui désigne en fait la mise en cache des contenus des <b>cache-block</b>. Le mécanisme de cache-block sera détaillé dans un prochaine chapitre</li>
</ul>
<blockquote><span class="quoteleft">“</span>
<p>La confusion entre ces 2 systèmes de caches provient des différentes interfaces et documentation, qui exploite l'expression "<b>cache de template</b>", sans préciser s'il s'agit de la compilation ou des fichiers de cache de template-block liés au cache-block</p>
<span class="quoteright">”</span></blockquote>

<h2>A quoi sert la compilation des template ?</h2>
<p>Lorsque la directive de compilation des templates est activée, tous vos fichiers de templates péniblement rédigés (*.tpl) sont transformés ou plutôt « <b>compilés</b> » (désolé pour les puristes) en PHP. Ainsi lorsqu'un internaute demande l'affichage d'une page, cette page nécessite forcement l'exécution d'un certain nombre de templates (quelques dizaine la plupart du temps)</p>
<ul>
<li><b>Situation 1 : Ces templates n'existent pas dans leur version « compilée » :</b> eZ Publish va d'abord compiler les templates impliqués (transformer la syntaxe eZTemplate des fichiers .tpl en syntaxe PHP), puis rendre disponible la version compilée (donc en PHP) pour la future construction du cache de vue ou des « cache blocks ». On pourrait résumer cette séquence en « TPL > PHP > xHTML (ou autre) »</li>
<li><b>Situation 2 : Ces templates existent dans leur version « compilés » :</b> lors de la construction du cache de vue, eZ Publish exécute directement le code PHP sans interpréter à nouveau les fichiers de template en syntaxe eZTemplate des fichiers .tpl. On pourrait résumer cette séquence en « PHP > xHTML (ou autre) »</li>
</ul>
<p><b>Cette « situation 1 » (templates compilés à la volée) peut s'avérer dramatique sur un site à fort trafic et ne devrait jamais se produire en production</b>. En effet, la compilation des templates nécessite une énorme consommation de ressource (RAM/CPU seulement, pas SQL) susceptible de générer toute sorte d'erreurs si le trafic concurrent est important, et si le "stalecache" n'est pas activé (concept détaillé plus loin).</p>
<p>Dans tous les cas de figure il est impératif :</p>
<ul>
<li>D'activer la compilation des templates sur un site en production</li>
<li>De ne jamais supprimer massivement le cache de template
<ul>
<li>pas de « <b>php bin/php/ezcache.php --clear-all –purge</b> »</li>
<li>pas de « <b>php bin/php/ezcache.php –clear-id=template</b> », qui ne supprime pas le cache de template block, mais l’ensemble des versions compilés des templates</li>
<li>pas de « <b>php bin/php/ezcache.php –clear-tag=template</b> », qui supprime à la fois les caches compilés et les le cache de template block</li>
</ul>
</li>
<li>Lors d'une mise à jour, de forcer la recompilation ciblée des templates ayant été modifiés, et uniquement ceux ayant été modifié (voir plus loin comment procéder)</li>
</ul>
<p><b>Note :</b> La compilation est activée par défaut (site.ini), mais souvent désactivés lors des phases de développement, tests ou autre. Il est donc important de vérifier qu'ils sont bien activés avec une mise en production du site.</p>
<p><i>settings/override/site.ini.append.php / [templatesettings]</i></p>
<pre class="php">
TemplateCompile=enabled <span style="color: #808080; font-style: italic;"># compile les templates dans /template/compiled/</span>
NodeTreeCaching=enabled <span style="color: #808080; font-style: italic;"># pré compile les templates dans /template/tree/, par défaut si TemplateCompile est enabled</span>
 
</pre>
<p>Il ne faut pas confondre ces 2 paramètres avec celui d'activation du cache de template :</p>
<pre class="php">
TemplateCache=enabled <span style="color: #808080; font-style: italic;"># met en cache les contenus des cache-block /template-block/</span>
 
</pre>

<h2>Comment sont stockés les templates compilés ?</h2>
<p>Pour les courageux qui sont encore attentifs et qui souhaitent en savoir plus, eZ Publish stocke les versions compilées des templates dans le répertoire :</p>
<p><b>{VarDir}/cache/template/compiled/</b><br/>
<i>{VarDir} = valeur du paramètre VarDir dans le site.ini (ou votre surchage spécifique), généralement "var/monsite/"</i></p>
<p><b>Les noms des fichiers sont relativement explicites :</b><br/>
<i>{nomdutemplate}-{hash}php</i><br/>
par exemple : pagelayout-49f4458d0b68aec3cf2de63a6918fd61.php</p>
<p>Le hash est calculé selon 2 méthodes différentes, en fonction du paramètre<b>ShareCompiledTemplates</b> (section <i>[TemplateSettings]</i> du <i>site.ini</i>)</p>
<p><i>Extrait de lib/eztemplate/classes/eztemplatecompiler.php</i></p>
<pre class="php">
<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">(</span> <span style="color: #0000ff;">$shareTemplates</span> <span style="color: #66cc66;">)</span>
 <span style="color: #0000ff;">$cacheFileKey</span> = <span style="color: #0000ff;">$key</span> . <span style="color: #ff0000;">'-'</span> . <span style="color: #0000ff;">$language</span>;
<span style="color: #b1b100;">else</span>
 <span style="color: #0000ff;">$cacheFileKey</span> = <span style="color: #0000ff;">$key</span> . <span style="color: #ff0000;">'-'</span> . <span style="color: #0000ff;">$internalCharset</span> . <span style="color: #ff0000;">'-'</span> . <span style="color: #0000ff;">$language</span> . <span style="color: #ff0000;">'-'</span> . <span style="color: #0000ff;">$useFullUrlText</span> . <span style="color: #0000ff;">$accessText</span> . <span style="color: #ff0000;">"-"</span> . <span style="color: #0000ff;">$pageLayoutVariable</span> . <span style="color: #ff0000;">'-'</span> . eZSys::<span style="color: #006600;">indexFile</span><span style="color: #66cc66;">(</span><span style="color: #66cc66;">)</span>;
 
<span style="color: #0000ff;">$cacheFileName</span> = <span style="color: #0000ff;">$extraName</span> . <a href="http://www.php.net/md5"><span style="color: #000066;">md5</span></a><span style="color: #66cc66;">(</span> <span style="color: #0000ff;">$cacheFileKey</span> <span style="color: #66cc66;">)</span> . <span style="color: #ff0000;">'.php'</span>;
 
<span style="color: #b1b100;">return</span> <span style="color: #0000ff;">$cacheFileName</span>;
 
</pre>
<p><i>Tableau des éléments de la clé de hash, en mode <b>ShareCompiledTemplates=disabled</b></i></p>
<table class="renderedtable" border="0" cellpadding="2" cellspacing="0" width="100%" summary="Tableau des éléments de la clé de hash, en mode ShareCompiledTemplate">
<tr>
<th scope="col">
<p>Elément de la clé de hash</p>
</th>
<th scope="col">
<p>Signification</p>
</th>
<th scope="col">
<p>Exemple de valeur</p>
</th>
</tr>
<tr class="bglight">
<td><b>key</b></td>
<td>MD5 du chemin complet du template</td>
<td>md5(‘extension/ezwebin/design/ezwebin/templates/pagelayout.tpl’)</td>
</tr>
<tr class="bgdark">
<td><b>internalCharset</b></td>
<td>Le charset interne</td>
<td>utf-8</td>
</tr>
<tr class="bglight">
<td><b>language</b></td>
<td>La langue définie pour le siteaccess utilisée lors de la compilation</td>
<td>fre-FR</td>
</tr>
<tr class="bgdark">
<td><b>useFullUrlText</b></td>
<td>En fonction de la directive UseFullUrl (layout.ini) si le template est compilé lors de l'appel d'un URL de type « layout/set/... » (module layout)</td>
<td>full | relative</td>
</tr>
<tr class="bglight">
<td><b>accessText</b></td>
<td>Nom du site siteaccess utilisée lors de la compilation, avec un « - » devant</td>
<td>-site_admin</td>
</tr>
<tr class="bgdark">
<td><b>pageLayoutVariable</b></td>
<td>Nom du pagelayout personnalisé, si le template est compilé lors de l'appel d'un URL de type « layout/set/print » par exemple (module layout)</td>
<td>print_pagelayout.tpl</td>
</tr>
<tr class="bglight">
<td><b>indexFile</b></td>
<td>La racine de l'index du site, qui peut varié selon divers paramètres, comme par exemple : le nom du siteaccess en mode « URI », ou encore la racine « layout/set/... »</td>
<td>site_admin | layout/set/print</td>
</tr>
<tr class="bgdark">
<td><b>extraName</b></td>
<td>Le nom du template, sans le « .tpl », avec un « - » à la fin</td>
<td>pagelayout-</td>
</tr>
</table>
<p>La clé de hash est donc constituée de plusieurs paramètres combinables, qu’il faut impérativement connaitre afin de bien comprendre et maîtriser l'impact d'une suppression complète des templates compilés. En effet, un site multi-langues, avec de nombreux siteaccess, et une utilisation massive du module '<b>layout</b>' (layout/set/... ce qui est tout à fait déconseillé par ailleurs, mais c'est un autre sujet) peut générer un grand nombre de combinaisons possibles de caches compilés, autant de cache à reconstruire lors d'une expiration massive.</p>
<p><b>Note :</b> Les plus attentifs auront remarqués la présence du répertoire « <b>{VarDir}/cache/template/tree/</b> ». Ce répertoire contient une sorte de pré-cache ou « arbre de compilation », qui n’est présent que lorsque le setting <b>NodeTreeCaching</b> est activé, et qui accélère la compilation des différentes variantes d'un même template (par exploitation de l'arbre PHP de compilation plutôt que le .tpl d'origine). Lors de suppression manuelles et ciblées des caches (rm), il peut être nécessaire de supprimer également le fichier correspondant dans le répertoire en question, sous le nom de <i><b>[hash]-[nomdutemplate].php</b></i></p>
<div class="">
<p><a href="http://www.gandbox.fr/var/plain_site/storage/images/media/images/technologie-web/nodetreecaching/21716-1-fre-FR/NodeTreeCaching.png"><img src="http://www.gandbox.fr/var/plain_site/storage/images/media/images/technologie-web/nodetreecaching/21716-1-fre-FR/NodeTreeCaching_reference.png" width="600" height="207" style="border: 0px;" alt="NodeTreeCaching" title="NodeTreeCaching"/></a></p>
</div>

<h2>Travailler en mode ShareCompiledTemplates</h2>
<p>Lorsque l’on active le paramètre <b>ShareCompiledTemplates=enabled</b> (section <i>[TemplateSettings]</i> du<i>site.ini</i>), la clé de hash du stockage des templates compilés est alors beaucoup plus triviale, à savoir le chemin du template et la langue du siteaccess courant :</p>
<p><i>Tableau des éléments de la clé de hash, en mode <b>ShareCompiledTemplates=enabled</b></i></p>
<table class="renderedtable" border="0" cellpadding="2" cellspacing="0" width="100%" summary="Tableau des éléments de la clé de hash, en mode ShareCompiledTemplate">
<tr>
<th scope="col">
<p>Elément de la clé de hash</p>
</th>
<th scope="col">
<p>Signification</p>
</th>
<th scope="col">
<p>Exemple de valeur</p>
</th>
</tr>
<tr class="bglight">
<td><b>key</b></td>
<td>MD5 du chemin complet du template</td>
<td>md5(‘extension/ezwebin/design/ezwebin/templates/pagelayout.tpl’)</td>
</tr>
<tr class="bgdark">
<td><b>language</b></td>
<td>La langue définie pour le siteaccess utilisée lors de la compilation</td>
<td>fre-FR</td>
</tr>
</table>
<p>Cette configuration est tout à fait adaptée à des instances eZ Publish propulsant de nombreux siteaccess, comme par exemple des usines à site, dont on ne maîtrise pas le nombre de siteaccess dans le temps</p>
<p>Cependant, il faut être attentif <b>aux valeurs des settings (fichiers INI) spécifiques à chaque siteaccess</b>, dont les valeurs sont par défaut compilés dans les templates. Il est donc nécessaire de charger dynamiquement ces valeurs de settings à chaque exécution des templates, en utilisant :</p>
<ul>
<li>Soit la directive globale <b>DynamicTemplateMode=enabled</b> (<i>site.ini [eZINISettings]</i>)</li>
<li>Soit au cas par cas dans l’utilisant de l’opérateur de template <b>eZINI</b> ( paramètre ‘<b>dynamic</b>’ )</li>
</ul>

<h2>Comment forcer la recompilation d'un lot de templates spécifiques ?</h2>
<p>Pour forcer la recompilation d'un ou plusieurs templates en particulier (2 templates d'ezwebin dans cet exemple) :</p>
<pre class="bash">
php bin/php/eztc.php -s monsiteaccess --force extension/ezwebin/design/ezwebin/templates/pagelayout.tpl extension/ezwebin/design/ezwebin/templates/page_leftmenu.tpl
 
</pre>
<p><b>Résultat :</b><br/>
<i>Compiled template file: extension/ezwebin/design/ezwebin/templates/pagelayout.tpl</i><br/>
<i>Compiled template file: extension/ezwebin/design/ezwebin/templates/page_leftmenu.tpl</i></p>
<p>Lorsque la liste des templates est un peu longue, on peut se simplifier la tâche en utilisant une liste stockée dans un fichier TXT ou encore en résultat d’une commande ls / find ou autre...</p>
<p>Compile tous les templates d’ezwebin qui commencent par “page_header_” :</p>
<pre class="bash">
find extension/ezwebin/ -name <span style="color: #ff0000;">"page_header_*.tpl"</span> | xargs php bin/php/eztc.php --force
 
</pre>
<p>Compile tous les templates contenu dans le fichier template_list.txt :</p>
<pre class="bash">
cat template_list.txt | xargs php bin/php/eztc.php --force
 
</pre>
<p><b>Documentation officielle :</b><br/>
<a href="https://auth.ez.no/ezpublish/documentation/development/scripting/supplied_scripts/template_compiler">https://auth.ez.no/ezpublish/documentation/development/scripting/supplied_scripts/template_compiler</a></p>
<p><b>Attention :</b> Le chapitre précédent nous apprend que la clé de hash d'un template compilé exploite le paramètre $pageLayoutVariable. eZ Publish ne déduit cette valeur que lorsqu'elle est appelé dans une URL de type « layout/set/... », à la volée dans le index.php. Le script eztc.php ne peut donc pas connaître et prévoir à l'avance les diverses combinaisons possible.</p>
<p>Pour le dire autrement, lorsqu'on utilise le <b>module layout</b> :</p>
<ul>
<li><b>eZ Publish compile autant de version des templates que de layout différents exploités, par exemple un template « page_head.tpl » existera en 4 versions si 3 layouts supplémentaire sont exploités</b> (version par défaut, 3 version spécifiques)</li>
<li>Le script <b>eztc.php ne recompile que le layout par défaut</b>, les 3 autres compilations seront effectuées par appel frontal des URL concernées. Pour mettre à jour ces templates spécifiques sans purger l'ensemble du cache, il faudra donc supprimer individuellement les versions compilés de ces templates dans le répertoire <b>{VarDir}/cache/template/compiled/</b>, puis attendre leur appels par des internautes (impact généralement négligeable en performance lorsque l'opération est ciblée sur un seul lot de templates)</li>
</ul>
<p>Pour supprimer manuellement les différentes variantes d’un template compilé afin de forcer la recompilation à la volée (par exemple pour le page_head.tpl) :</p>
<pre class="bash">
find var/ezflow_site/cache/template -name <span style="color: #ff0000;">"page_head-*"</span> | xargs rm
 
</pre>

<h2>Comment faire expirer le cache des overrides de templates ?</h2>
<p>Lorsque vous ajoutez des templates dans votre extension spécifique, et que vous définissez de overrides sur ces templates, 2 caches sont impliqués dans cette opération :</p>
<ul>
<li><b>Le cache de la liste des répertoires de designs</b> par site_access invoqués progressivement, stocké dans <b>{VarDir}/cache/designbase_{hash}.php</b>. Le {hash} est constitué d’un md5 du site_access invoqué</li>
</ul>
<p>Il est possible de faire expirer ce cache par la commande :</p>
<pre class="bash">
php bin/php/ezcache.php -s monsiteaccess --clear-<span style="color: #0000ff;">id=</span>design_base
 
</pre>
<p><b>Le cache de la liste des overrides de templates</b> par site_access invoqués progressivement, stocké dans <b>{VarDir}/cache/override/override_{hash}.php</b>. Le {hash} est constitué d’un md5 :</p>
<ul>
<li>du tableau des répertoires /design (<i>design.ini [ExtensionSettings] DesignExtensions[]</i>)</li>
<li>du SiteDesign “standard”</li>
<li>du SiteDesign déclaré dans <i>site.ini [DesignSettings] SiteDesign</i></li>
</ul>
<p>Il est possible de faire expirer ce cache par la commande :</p>
<pre class="bash">
php bin/php/ezcache.php -s monsiteaccess --clear-<span style="color: #0000ff;">id=</span>template-override
 
</pre></div>

				</div>

                                
                                <div class="attribute-byline">
				    <div><a href="http://gandbox.fr/Blogs/Technologies-Web/Comprendre-le-fonctionnement-bas-niveau-du-cache-eZ-Publish-La-compilation-des-templates-Article-2">Read Original Item</a></div>
                                </div>

                                                            </div>
                        </div>

                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>

        <div class="extrainfo-column-position">
            <div class="extrainfo-column">
                <div class="border-box">
                <div class="border-tl"><div class="border-tr"><div class="border-tc"></div></div></div>
                <div class="border-ml"><div class="border-mr"><div class="border-mc float-break">
                                                <div class="attribute-tag-cloud">
                        <p>
                            
                        </p>
                        </div>

                        <div class="attribute-description">
                            
                        </div>

                        <div class="attribute-tags">
                            <h1>Tags</h1>
                            <ul>
                                                        </ul>
                        </div>

                        <div class="attribute-archive">
                            <h1>Archive</h1>
                            <ul>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/7/(year)/2014" title="">July 2014</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/3/(year)/2014" title="">March 2014</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/2/(year)/2014" title="">February 2014</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/12/(year)/2013" title="">December 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/11/(year)/2013" title="">November 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/10/(year)/2013" title="">October 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/9/(year)/2013" title="">September 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/6/(year)/2013" title="">June 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/5/(year)/2013" title="">May 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/4/(year)/2013" title="">April 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/1/(year)/2013" title="">January 2013</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/12/(year)/2012" title="">December 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/10/(year)/2012" title="">October 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/9/(year)/2012" title="">September 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/8/(year)/2012" title="">August 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/7/(year)/2012" title="">July 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/6/(year)/2012" title="">June 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/5/(year)/2012" title="">May 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/4/(year)/2012" title="">April 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/3/(year)/2012" title="">March 2012</a></li>
                                                            <li><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/2/(year)/2012" title="">February 2012</a></li>
                                                        </ul>
                        </div>

                        <!--START: CAL NAV -->
    
<div class="calendar">
<div class="calendar-tl"><div class="calendar-tr"><div class="calendar-bl"><div class="calendar-br">
<div class="content">

<div class="month">
<div class="previous">
<p><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/7/(year)/2014" title="Previous month">&#8249;&#8249;<span class="hide"> Previous month</span></a></p>
</div>
<div class="next">
<p><a href="/layout/set/print/Mirror/Planet-eZ-Publish.fr/(month)/9/(year)/2014" title="Next month"><span class="hide">Next month </span>&#8250;&#8250;</a></p>
</div>
<h2>August&nbsp;2014</h2>
</div>

<div class="table">
<table cellspacing="0" border="0" summary="Calendar">
<tr class="top">
    <th class="left">Mon</th>
    <th>Tue</th>
    <th>Wed</th>
    <th>Thu</th>
    <th>Fri</th>
    <th>Sat</th>
    <th class="right">Sun</th>
</tr>                <tr class="">
                                            <td class="left">&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            <td class=" ">
            1
        </td>
                            <td class=" ">
            2
        </td>
                                        <td class="  right">
            3
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            4
        </td>
                            <td class=" ">
            5
        </td>
                            <td class=" ">
            6
        </td>
                            <td class=" ">
            7
        </td>
                            <td class=" ">
            8
        </td>
                            <td class=" ">
            9
        </td>
                                        <td class="  right">
            10
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            11
        </td>
                            <td class=" ">
            12
        </td>
                            <td class=" ">
            13
        </td>
                            <td class=" ">
            14
        </td>
                            <td class=" ">
            15
        </td>
                            <td class=" ">
            16
        </td>
                                        <td class="  right">
            17
        </td>
                </tr>
                        <tr class="">
                    <td class="  left">
            18
        </td>
                            <td class=" ">
            19
        </td>
                            <td class=" ">
            20
        </td>
                            <td class=" ">
            21
        </td>
                            <td class=" ">
            22
        </td>
                            <td class=" ">
            23
        </td>
                                        <td class="  right">
            24
        </td>
                </tr>
                        <tr class="bottom">
                    <td class="  left">
            25
        </td>
                            <td class="currentselected today">
            26
        </td>
                            <td class=" ">
            27
        </td>
                            <td class=" ">
            28
        </td>
                            <td class=" ">
            29
        </td>
                            <td class=" ">
            30
        </td>
                                        <td class="  right">
            31
        </td>
                </tr>
        </table>
</div>

</div>
</div></div></div></div>
</div>

<!-- END: CAL NAV -->                </div></div></div>
                <div class="border-bl"><div class="border-br"><div class="border-bc"></div></div></div>
                </div>
            </div>
        </div>
    </div>
</div>";s:15:"view_parameters";a:5:{s:6:"offset";b:0;s:4:"year";b:0;s:5:"month";b:0;s:3:"day";b:0;s:10:"namefilter";b:0;}s:4:"path";a:4:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:20:"Planet eZ Publish.fr";s:3:"url";s:22:"/content/view/full/239";s:9:"url_alias";s:27:"Mirror/Planet-eZ-Publish.fr";s:7:"node_id";s:3:"239";}i:3;a:4:{s:4:"text";s:102:"Comprendre le fonctionnement bas-niveau du cache eZ Publish : La compilation des templates (Article 2)";s:3:"url";b:0;s:9:"url_alias";b:0;s:7:"node_id";s:4:"3901";}}s:10:"title_path";a:4:{i:0;a:4:{s:4:"text";s:12:"eZ Ecosystem";s:3:"url";s:20:"/content/view/full/2";s:9:"url_alias";s:0:"";s:7:"node_id";s:1:"2";}i:1;a:4:{s:4:"text";s:6:"Mirror";s:3:"url";s:22:"/content/view/full/216";s:9:"url_alias";s:6:"Mirror";s:7:"node_id";s:3:"216";}i:2;a:4:{s:4:"text";s:20:"Planet eZ Publish.fr";s:3:"url";s:22:"/content/view/full/239";s:9:"url_alias";s:27:"Mirror/Planet-eZ-Publish.fr";s:7:"node_id";s:3:"239";}i:3;a:3:{s:4:"text";s:102:"Comprendre le fonctionnement bas-niveau du cache eZ Publish : La compilation des templates (Article 2)";s:3:"url";b:0;s:9:"url_alias";b:0;}}s:10:"section_id";s:1:"1";s:7:"node_id";s:4:"3901";s:15:"navigation_part";s:23:"ezcontentnavigationpart";s:12:"content_info";a:24:{s:9:"object_id";s:4:"3901";s:7:"node_id";s:4:"3901";s:14:"parent_node_id";s:3:"239";s:8:"class_id";s:2:"20";s:16:"class_identifier";s:9:"blog_post";s:9:"remote_id";s:45:"RSSImport_20_ba1822e57dfd4d928e8e4b82b31f0f5b";s:14:"node_remote_id";s:32:"3459b5d84d1aec5461be6132bbb07b68";s:6:"offset";b:0;s:8:"viewmode";s:4:"full";s:26:"navigation_part_identifier";s:23:"ezcontentnavigationpart";s:10:"node_depth";s:1:"4";s:9:"url_alias";s:126:"Mirror/Planet-eZ-Publish.fr/Comprendre-le-fonctionnement-bas-niveau-du-cache-eZ-Publish-La-compilation-des-templates-Article-2";s:16:"current_language";s:6:"eng-US";s:13:"language_mask";s:1:"2";s:12:"main_node_id";s:4:"3901";s:19:"main_node_url_alias";b:0;s:19:"persistent_variable";a:2:{s:9:"left_menu";b:0;s:10:"extra_menu";b:0;}s:11:"class_group";b:0;s:5:"state";a:1:{i:2;s:1:"1";}s:16:"state_identifier";a:1:{i:0;s:18:"ez_lock/not_locked";}s:15:"parent_class_id";s:2:"19";s:23:"parent_class_identifier";s:4:"blog";s:21:"parent_node_remote_id";s:32:"7f415b1fa83ea305e9dda229c01e0140";s:23:"parent_object_remote_id";s:32:"151890fdce8e55ae15819afeafc7c857";}s:13:"template_list";a:3:{i:0;s:64:"extension/ezecosystem/design/eze/templates/tagcloud/tagcloud.tpl";i:1;s:61:"design/standard/templates/content/datatype/view/ezxmltext.tpl";i:2;s:66:"extension/ezwebin/design/ezwebin/templates/parts/blog/calendar.tpl";}s:9:"cache_ttl";i:-1;}